# Using the `rust-musl-builder` as base image, instead of 
# the official Rust toolchain
FROM clux/muslrust:stable AS chef
USER root
RUN cargo install cargo-chef
WORKDIR /app

FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder
COPY --from=planner /app/recipe.json recipe.json
# Build dependencies - this is the caching Docker layer!
RUN cargo chef cook --release --target x86_64-unknown-linux-musl --recipe-path recipe.json
# Build application
COPY . .
RUN SQLX_OFFLINE=true cargo build --release --target x86_64-unknown-linux-musl --package backup-server --bin backup-server

# We do not need the Rust toolchain to run the binary!
FROM alpine AS runtime
ENV RUST_BACKTRACE=1
EXPOSE 8000
COPY --from=builder /app/target/x86_64-unknown-linux-musl/release/backup-server /app/backup-server
ENTRYPOINT ["/app/backup-server", "server"]

